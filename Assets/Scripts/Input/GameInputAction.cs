//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.1
//     from Assets/Scripts/Input/GameInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputAction"",
    ""maps"": [
        {
            ""name"": ""GameInput"",
            ""id"": ""a8cd6882-c58e-4b7f-96f7-8619364db930"",
            ""actions"": [
                {
                    ""name"": ""Horizontal"",
                    ""type"": ""Value"",
                    ""id"": ""7c024474-85d1-4e0b-b409-58b62e62ad48"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Vertical"",
                    ""type"": ""Value"",
                    ""id"": ""ecf5b2a8-952a-46ca-a06a-93c6f77c0a94"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""a036d018-7384-4fe7-a3b8-3dfe0c9a8d5c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""570d0c64-fd12-44cf-a404-abb02c7b9a8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""e62dd011-f9ae-41f9-a49f-2baadc55693f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability"",
                    ""type"": ""Button"",
                    ""id"": ""118c046d-c99e-415e-8053-bccc6810aaae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""callMenu"",
                    ""type"": ""Button"",
                    ""id"": ""80ef2673-cb66-44a4-8a0c-645bc370d380"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchPlayer"",
                    ""type"": ""Button"",
                    ""id"": ""0fca295d-3ca8-44c5-9d0e-8e0f63ef0262"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GhostVision"",
                    ""type"": ""Button"",
                    ""id"": ""78235de4-eb9c-4526-8d7d-53e98d7ffd37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TurnOn"",
                    ""type"": ""Button"",
                    ""id"": ""04f021fb-2d63-4de3-b17b-84e44ebc0b38"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""f228dbd1-cc10-445f-b899-9cb5fc508169"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c6198e81-9222-40b4-8d9e-7ccb5c53555d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""3cccf575-6b7c-42b1-96f6-db4247343510"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""658f61a3-e7d0-49d8-8fc6-214d4dcb7b67"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d855b707-8c67-40a9-a291-eebcf6538bd8"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22029e07-c65c-4c23-8bc1-541de58d7fca"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38d33102-c57c-4ae8-91c0-a05bcb9dcfa9"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbdc82b9-6bf2-4dd8-91bd-754a091a58ae"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""callMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""4cb9c944-fe38-4731-a9db-746df87433dc"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a5ab0a98-7d71-4cc2-9a70-e71800f92326"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""0a2be8dd-dc0e-4845-8d18-8ec257ed6c24"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f5897318-8e64-4724-aaff-09c968daedf1"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3432acb0-1535-4712-97f8-a72404aab3b1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GhostVision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cef2d29a-161e-4ee4-b784-0eeb1b3b8289"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GameInput
        m_GameInput = asset.FindActionMap("GameInput", throwIfNotFound: true);
        m_GameInput_Horizontal = m_GameInput.FindAction("Horizontal", throwIfNotFound: true);
        m_GameInput_Vertical = m_GameInput.FindAction("Vertical", throwIfNotFound: true);
        m_GameInput_Jump = m_GameInput.FindAction("Jump", throwIfNotFound: true);
        m_GameInput_Dash = m_GameInput.FindAction("Dash", throwIfNotFound: true);
        m_GameInput_Attack = m_GameInput.FindAction("Attack", throwIfNotFound: true);
        m_GameInput_Ability = m_GameInput.FindAction("Ability", throwIfNotFound: true);
        m_GameInput_callMenu = m_GameInput.FindAction("callMenu", throwIfNotFound: true);
        m_GameInput_SwitchPlayer = m_GameInput.FindAction("SwitchPlayer", throwIfNotFound: true);
        m_GameInput_GhostVision = m_GameInput.FindAction("GhostVision", throwIfNotFound: true);
        m_GameInput_TurnOn = m_GameInput.FindAction("TurnOn", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GameInput
    private readonly InputActionMap m_GameInput;
    private List<IGameInputActions> m_GameInputActionsCallbackInterfaces = new List<IGameInputActions>();
    private readonly InputAction m_GameInput_Horizontal;
    private readonly InputAction m_GameInput_Vertical;
    private readonly InputAction m_GameInput_Jump;
    private readonly InputAction m_GameInput_Dash;
    private readonly InputAction m_GameInput_Attack;
    private readonly InputAction m_GameInput_Ability;
    private readonly InputAction m_GameInput_callMenu;
    private readonly InputAction m_GameInput_SwitchPlayer;
    private readonly InputAction m_GameInput_GhostVision;
    private readonly InputAction m_GameInput_TurnOn;
    public struct GameInputActions
    {
        private @GameInputAction m_Wrapper;
        public GameInputActions(@GameInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Horizontal => m_Wrapper.m_GameInput_Horizontal;
        public InputAction @Vertical => m_Wrapper.m_GameInput_Vertical;
        public InputAction @Jump => m_Wrapper.m_GameInput_Jump;
        public InputAction @Dash => m_Wrapper.m_GameInput_Dash;
        public InputAction @Attack => m_Wrapper.m_GameInput_Attack;
        public InputAction @Ability => m_Wrapper.m_GameInput_Ability;
        public InputAction @callMenu => m_Wrapper.m_GameInput_callMenu;
        public InputAction @SwitchPlayer => m_Wrapper.m_GameInput_SwitchPlayer;
        public InputAction @GhostVision => m_Wrapper.m_GameInput_GhostVision;
        public InputAction @TurnOn => m_Wrapper.m_GameInput_TurnOn;
        public InputActionMap Get() { return m_Wrapper.m_GameInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameInputActions set) { return set.Get(); }
        public void AddCallbacks(IGameInputActions instance)
        {
            if (instance == null || m_Wrapper.m_GameInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameInputActionsCallbackInterfaces.Add(instance);
            @Horizontal.started += instance.OnHorizontal;
            @Horizontal.performed += instance.OnHorizontal;
            @Horizontal.canceled += instance.OnHorizontal;
            @Vertical.started += instance.OnVertical;
            @Vertical.performed += instance.OnVertical;
            @Vertical.canceled += instance.OnVertical;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Ability.started += instance.OnAbility;
            @Ability.performed += instance.OnAbility;
            @Ability.canceled += instance.OnAbility;
            @callMenu.started += instance.OnCallMenu;
            @callMenu.performed += instance.OnCallMenu;
            @callMenu.canceled += instance.OnCallMenu;
            @SwitchPlayer.started += instance.OnSwitchPlayer;
            @SwitchPlayer.performed += instance.OnSwitchPlayer;
            @SwitchPlayer.canceled += instance.OnSwitchPlayer;
            @GhostVision.started += instance.OnGhostVision;
            @GhostVision.performed += instance.OnGhostVision;
            @GhostVision.canceled += instance.OnGhostVision;
            @TurnOn.started += instance.OnTurnOn;
            @TurnOn.performed += instance.OnTurnOn;
            @TurnOn.canceled += instance.OnTurnOn;
        }

        private void UnregisterCallbacks(IGameInputActions instance)
        {
            @Horizontal.started -= instance.OnHorizontal;
            @Horizontal.performed -= instance.OnHorizontal;
            @Horizontal.canceled -= instance.OnHorizontal;
            @Vertical.started -= instance.OnVertical;
            @Vertical.performed -= instance.OnVertical;
            @Vertical.canceled -= instance.OnVertical;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Ability.started -= instance.OnAbility;
            @Ability.performed -= instance.OnAbility;
            @Ability.canceled -= instance.OnAbility;
            @callMenu.started -= instance.OnCallMenu;
            @callMenu.performed -= instance.OnCallMenu;
            @callMenu.canceled -= instance.OnCallMenu;
            @SwitchPlayer.started -= instance.OnSwitchPlayer;
            @SwitchPlayer.performed -= instance.OnSwitchPlayer;
            @SwitchPlayer.canceled -= instance.OnSwitchPlayer;
            @GhostVision.started -= instance.OnGhostVision;
            @GhostVision.performed -= instance.OnGhostVision;
            @GhostVision.canceled -= instance.OnGhostVision;
            @TurnOn.started -= instance.OnTurnOn;
            @TurnOn.performed -= instance.OnTurnOn;
            @TurnOn.canceled -= instance.OnTurnOn;
        }

        public void RemoveCallbacks(IGameInputActions instance)
        {
            if (m_Wrapper.m_GameInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameInputActions instance)
        {
            foreach (var item in m_Wrapper.m_GameInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameInputActions @GameInput => new GameInputActions(this);
    public interface IGameInputActions
    {
        void OnHorizontal(InputAction.CallbackContext context);
        void OnVertical(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnAbility(InputAction.CallbackContext context);
        void OnCallMenu(InputAction.CallbackContext context);
        void OnSwitchPlayer(InputAction.CallbackContext context);
        void OnGhostVision(InputAction.CallbackContext context);
        void OnTurnOn(InputAction.CallbackContext context);
    }
}
